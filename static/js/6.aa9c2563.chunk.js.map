{"version":3,"sources":["images/developer.png","images/icons/linkedin.svg","images/icons/github.svg","images/icons/lightMode.svg","images/icons/arrowDown.svg","react/Components/AboutMeContainer/AboutMe/AboutMe.component.tsx","react/Components/helpers.ts","react/Components/Buttons/MenuButton.component.tsx","redux/email/email.actions.ts","redux/website/website.actions.ts","react/Components/AboutMeContainer/ContactMe/ContactMe.component.tsx","react/Components/AboutMeContainer/AboutModal/AboutModal.component.tsx","react/Components/AboutMeContainer/AboutTitle/AboutTitle.component.tsx","react/Components/Links/Connections.component.tsx","react/Components/Titles/DeveloperTitle/DeveloperTitle.component.tsx","react/Components/Configurations/LanguageSwitch/LanguageSwitch.component.tsx","react/Components/Configurations/LightMode/LightMode.component.tsx","react/Components/Projects/ProjectsArrow/ProjectsArrow.component.tsx","react/Pages/HomePage/HomePage.component.tsx"],"names":["module","exports","AboutMe","age","moment","diff","xs","sm","md","className","src","require","alt","id","href","target","rel","validadeName","name","regex","find","e","test","MenuButton","onClick","children","align","justify","actionsCreators","Object","freeze","sendEmail","values","type","EmailActionTypes","SEND_EMAIL","sentEmailSuccess","EMAIL_SUCCESS","sentEmailFail","error","EMAIL_FAIL","sendConfirmationEmail","SEND_CONFIRMATION_EMAIL","sentConfirmationEmailSuccess","CONFIRMATION_EMAIL_SUCCESS","sentConfirmationEmailFail","CONFIRMATION_EMAIL_FAIL","toggleLightMode","WebsiteActionTypes","TOGGLE_LIGHT_MODE","toggleAboutModalVisible","TOGGLE_ABOUT_MODAL_VISIBLE","setPageLoading","SET_PAGE_LOADING","removePageLoading","REMOVE_PAGE_LOADING","changeLanguage","language","CHANGE_LANGUAGE","Item","Form","ContactMe","dispatch","useDispatch","useForm","form","useEffect","resetFields","websiteActions","onChange","field","value","setFieldsValue","sendFeedback","variables","window","emailjs","send","then","res","emailActions","catch","err","onFinish","rules","required","message","validator","rule","callback","invalidLengthMessage","invalidNameMessage","lenght","checkName","invalidEmailMessage","email","validateEmail","checkEmail","checkMessage","TextArea","rows","submit","AboutModal","useSelector","Website","Email","visible","aboutModalVisible","theme","pageLoading","emailError","emailValues","emailErrorValue","handleFirstMessageSuccess","handleFirstMessageFail","notification","success","duration","description","status","onCancel","footer","width","wrapClassName","maskClosable","spinning","AboutTitle","placement","title","Connections","open","DeveloperTitle","Option","Select","LanguageSwitch","defaultValue","countryCode","LightMode","ProjectsArrow","innerHeight","scroll","HomePage","useState","animation","setAnimation","setTimeout","span","style","height"],"mappings":"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","file":"static/js/6.aa9c2563.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/developer.aec33a6c.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.3c8afea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1f33e75d.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightMode.24c27a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowDown.ae427edb.svg\";","import { Col, Row } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport LazyLoad from \"react-lazyload\";\n\nfunction AboutMe() {\n  var age = moment().diff(\"1995-01-12\", \"years\");\n  return (\n    <Row>\n      <Col xs={24} sm={24} md={10}>\n        <LazyLoad>\n          <img\n            className=\"developer\"\n            src={require(\"../../../../images/developer.png\")}\n            alt=\"\"\n          />\n        </LazyLoad>\n      </Col>\n      <Col xs={24} sm={24} md={14} className=\"aboutTextContainer\">\n        <p>\n          <FormattedMessage id=\"about.text01\" /> {age}\n          <FormattedMessage id=\"about.text02\" />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.text03\" />{\" \"}\n          <a\n            href=\"https://en.wavecom.pt/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Wavecom\n          </a>\n          <FormattedMessage id=\"about.text04\" />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.text05\" />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.text06\" />\n        </p>\n      </Col>\n    </Row>\n  );\n}\n\nexport default AboutMe;\n","import { ReactNode } from \"react\";\nexport const checkName = (\n  rule: object,\n  value: any,\n  callback: (message?: string) => void,\n  invalidLengthMessage: ReactNode,\n  invalidNameMessage: ReactNode\n) => {\n  if (value.lenght < 3) {\n    callback(invalidLengthMessage as string);\n  }\n  if (value && validadeName(value)) {\n    callback(invalidNameMessage as string);\n  } else {\n    callback();\n  }\n};\n\nexport const validadeName = (name: any) => {\n  const regex = /^[0-9A-Za-z!@#$%&*()_\\-+={[}\\]|:;\"'<,>.?/\\\\~`]+[0-9A-Za-z!@#$%&*()_\\-+={[}\\]|:;\"'<,>.?/\\\\~`]*$/g;\n\n  if (typeof name === \"object\") {\n    const result = name.find((e: string) => !regex.test(e));\n    return result ? true : false;\n  }\n\n  return !regex.test(name);\n};\n\nexport const validateEmail = (email: any) => {\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (typeof email === \"object\") {\n    const result = email.find((e: string) => !regex.test(e));\n    return result ? true : false;\n  }\n\n  return !regex.test(email);\n};\n\nexport const checkEmail = (\n  rule: object,\n  value: string,\n  callback: (message?: string) => void,\n  invalidEmailMessage: ReactNode\n) => {\n  if (value && validateEmail(value)) {\n    callback(invalidEmailMessage as string);\n  } else {\n    callback();\n  }\n};\n\nexport const checkMessage = (\n  rule: object,\n  value: any,\n  callback: (message?: string) => void,\n  invalidLengthMessage: ReactNode\n) => {\n  if (value.lenght < 3) {\n    callback(invalidLengthMessage as string);\n  } else {\n    callback();\n  }\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { ExplicitAny } from \"../../../global\";\nimport { Row } from \"antd\";\n\n/**\n * Button to start the game, by redirecting to the /game location\n */\n\ninterface MenuButtonProps {\n  className?: string;\n  onClick: ExplicitAny;\n}\n\nfunction MenuButton({\n  className,\n  onClick,\n  children\n}: PropsWithChildren<MenuButtonProps>) {\n  return (\n    <Row className=\"buttonSpaceRow\" align=\"middle\" justify=\"center\">\n      <div\n        className={`animatedButton divButton ${className}`}\n        onClick={onClick}\n      >\n        {children}\n      </div>\n    </Row>\n  );\n}\n\nexport default MenuButton;\n","import { ValueOf } from \"../../global\";\nimport EmailActionTypes from \"./email.types\";\n\nconst sendEmail = (values: any) => ({\n  type: EmailActionTypes.SEND_EMAIL,\n  values\n});\n\nconst sentEmailSuccess = () => ({\n  type: EmailActionTypes.EMAIL_SUCCESS\n});\n\nconst sentEmailFail = (error: any) => ({\n  type: EmailActionTypes.EMAIL_FAIL,\n  error\n});\n\nconst sendConfirmationEmail = () => ({\n  type: EmailActionTypes.SEND_CONFIRMATION_EMAIL\n});\n\nconst sentConfirmationEmailSuccess = () => ({\n  type: EmailActionTypes.CONFIRMATION_EMAIL_SUCCESS\n});\n\nconst sentConfirmationEmailFail = () => ({\n  type: EmailActionTypes.CONFIRMATION_EMAIL_FAIL\n});\n\n// ********************************************************\n\nconst actionsCreators = Object.freeze({\n  sendEmail,\n  sentEmailSuccess,\n  sentEmailFail,\n  sendConfirmationEmail,\n  sentConfirmationEmailSuccess,\n  sentConfirmationEmailFail\n});\n\nexport type ActionsCreators = ReturnType<ValueOf<typeof actionsCreators>>;\nexport default actionsCreators;\n","import { ValueOf } from \"../../global\";\nimport WebsiteActionTypes from \"./website.types\";\n\nconst toggleLightMode = () => ({\n  type: WebsiteActionTypes.TOGGLE_LIGHT_MODE\n});\n\nconst toggleAboutModalVisible = () => ({\n  type: WebsiteActionTypes.TOGGLE_ABOUT_MODAL_VISIBLE\n});\n\nconst setPageLoading = () => ({\n  type: WebsiteActionTypes.SET_PAGE_LOADING\n});\n\nconst removePageLoading = () => ({\n  type: WebsiteActionTypes.REMOVE_PAGE_LOADING\n});\n\nconst changeLanguage = (language: string) => ({\n  type: WebsiteActionTypes.CHANGE_LANGUAGE,\n  language\n});\n\n// ********************************************************\n\nconst actionsCreators = Object.freeze({\n  toggleLightMode,\n  toggleAboutModalVisible,\n  setPageLoading,\n  removePageLoading,\n  changeLanguage\n});\n\nexport type ActionsCreators = ReturnType<ValueOf<typeof actionsCreators>>;\nexport default actionsCreators;\n","import { Input, Form, Row } from \"antd\";\nimport { checkName, checkEmail, checkMessage } from \"../../helpers\";\nimport { FormattedMessage } from \"react-intl\";\nimport MenuButton from \"../../Buttons/MenuButton.component\";\nimport React, { useEffect } from \"react\";\nimport emailActions from \"../../../../redux/email/email.actions\";\nimport { useDispatch } from \"react-redux\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\n\nconst { Item } = Form;\n\nfunction ContactMe() {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const mountComponent = () => {\n    form.resetFields();\n    dispatch(websiteActions.removePageLoading());\n  };\n  useEffect(mountComponent, []);\n\n  const onSubmit = (values: any) => {\n    dispatch(websiteActions.setPageLoading());\n    dispatch(emailActions.sendEmail(values));\n    sendFeedback(values);\n  };\n\n  const onChange = (\n    { target: { value } }: { target: { value: string } },\n    field: string\n  ) => {\n    form.setFieldsValue({ [field]: value });\n  };\n\n  const sendFeedback = (variables: any) => {\n    (window as any).emailjs\n      .send(\"outlook\", \"portfolio\", variables)\n      .then((res: any) => {\n        dispatch(emailActions.sentEmailSuccess());\n      })\n      // Handle errors here however you like, or use a React error boundary\n      .catch((err: any) => {\n        dispatch(emailActions.sentEmailFail(err));\n      });\n  };\n\n  return (\n    <>\n      <Form\n        name=\"loginForm\"\n        className=\"contactMe\"\n        onFinish={onSubmit}\n        form={form}\n      >\n        <Row align=\"middle\" justify=\"center\">\n          <Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id=\"contact.required.name\" />\n              },\n              {\n                validator: (\n                  rule: object,\n                  value: string,\n                  callback: (message?: string) => void\n                ) =>\n                  checkName(\n                    rule,\n                    value,\n                    callback,\n                    <FormattedMessage id=\"contact.invalid.length\" />,\n                    <FormattedMessage id=\"contact.invalid.name\" />\n                  )\n              }\n            ]}\n          >\n            <Input\n              className=\"formInputAnimated formInput\"\n              onChange={(e: any) => onChange(e, \"name\")}\n            />\n            <label className=\"labelPlaceholder\">\n              <FormattedMessage id=\"contact.name\" />\n            </label>\n          </Item>\n        </Row>\n        <Row align=\"middle\" justify=\"center\">\n          <Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id=\"contact.required.email\" />\n              },\n              {\n                validator: (\n                  rule: object,\n                  value: string,\n                  callback: (message?: string) => void\n                ) =>\n                  checkEmail(\n                    rule,\n                    value,\n                    callback,\n                    <FormattedMessage id=\"contact.invalid.email\" />\n                  )\n              }\n            ]}\n          >\n            <Input\n              className=\"formInputAnimated formInput\"\n              onChange={(e: any) => onChange(e, \"email\")}\n            />\n            <label className=\"labelPlaceholder\">\n              <FormattedMessage id=\"contact.email\" />\n            </label>\n          </Item>\n        </Row>\n        <Row align=\"middle\" justify=\"center\">\n          <Item\n            name=\"message\"\n            rules={[\n              {\n                required: true,\n                message: <FormattedMessage id=\"contact.required.message\" />\n              },\n              {\n                validator: (\n                  rule: object,\n                  value: string,\n                  callback: (message?: string) => void\n                ) =>\n                  checkMessage(\n                    rule,\n                    value,\n                    callback,\n                    <FormattedMessage id=\"contact.invalid.length\" />\n                  )\n              }\n            ]}\n          >\n            <Input.TextArea\n              rows={4}\n              className=\"formInputAnimated formInput formMessage\"\n              onChange={(e: any) => onChange(e, \"message\")}\n            />\n            <label className=\"labelPlaceholder\">\n              <FormattedMessage id=\"contact.message\" />\n            </label>\n          </Item>\n        </Row>\n\n        <Row align=\"middle\" justify=\"center\">\n          <MenuButton\n            onClick={() => form.submit()}\n            className=\"submitButtonAnimated\"\n          >\n            <span>\n              <FormattedMessage id=\"contact.submit\" />\n            </span>\n          </MenuButton>\n        </Row>\n      </Form>\n      <span className=\"contactMeBehind\">\n        <FormattedMessage id=\"contact.title\" />\n      </span>\n    </>\n  );\n}\n\nexport default ContactMe;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Col, Modal, Row, Spin, notification } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AboutMe from \"../AboutMe/AboutMe.component\";\nimport ContactMe from \"../ContactMe/ContactMe.component\";\nimport { FormattedMessage } from \"react-intl\";\nimport React, { useEffect } from \"react\";\nimport { RootReducerState } from \"../../../../global\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\n\nfunction AboutModal() {\n  const dispatch = useDispatch();\n\n  const {\n    visible,\n    theme,\n    pageLoading,\n    emailError,\n    emailValues,\n    emailErrorValue\n  } = useSelector(({ Website, Email }: RootReducerState) => ({\n    visible: Website.aboutModalVisible,\n    theme: Website.theme,\n    pageLoading: Website.pageLoading,\n    emailError: Email.emailError,\n    emailValues: Email.values,\n    emailErrorValue: Email.emailErrorValue\n  }));\n\n  const closeModal = () => {\n    dispatch(websiteActions.toggleAboutModalVisible());\n  };\n\n  useEffect(() => {\n    if (pageLoading) {\n      if (emailError) {\n        handleFirstMessageSuccess();\n      } else if (emailError === false) {\n        handleFirstMessageFail(emailErrorValue);\n      }\n    }\n  }, [emailError]);\n\n  const handleFirstMessageSuccess = () => {\n    notification.success({\n      message: <FormattedMessage id=\"contact.success\" />,\n      duration: 5\n    });\n    dispatch(websiteActions.toggleAboutModalVisible());\n    dispatch(websiteActions.removePageLoading());\n    sendConfirmationEmail(emailValues);\n  };\n\n  const handleFirstMessageFail = (err: any) => {\n    notification.error({\n      message: <FormattedMessage id=\"contact.error.message1\" />,\n      description: err?.status ? (\n        <span>\n          <FormattedMessage id=\"contact.error.message2\" />\n          {err.status}\n        </span>\n      ) : null,\n      duration: 5\n    });\n    dispatch(websiteActions.removePageLoading());\n  };\n\n  const sendConfirmationEmail = (variables: any) => {\n    (window as any).emailjs\n      .send(\"outlook\", \"portfolio\", variables)\n      // Handle errors here however you like, or use a React error boundary\n      .catch((err: any) => {\n        notification.error({\n          message: <FormattedMessage id=\"contact.error.message3\" />,\n          description: err.status ? (\n            <span>\n              <FormattedMessage id=\"contact.error.message2\" />\n              {err.status}\n            </span>\n          ) : null,\n          duration: 5\n        });\n      });\n  };\n\n  return visible ? (\n    <Modal\n      visible\n      onCancel={closeModal}\n      footer={null}\n      width={\"80%\"}\n      wrapClassName=\"react-portifolio\"\n      maskClosable={false}\n    >\n      <Spin spinning={pageLoading}>\n        <Row className={`aboutModalContainer ${theme}`}>\n          <Col className=\"aboutMeCol\" xs={24} sm={24} md={14}>\n            <AboutMe />\n          </Col>\n\n          <Col className=\"contactMeCol\" xs={24} sm={24} md={10}>\n            <ContactMe />\n          </Col>\n        </Row>\n      </Spin>\n    </Modal>\n  ) : null;\n}\n\nexport default AboutModal;\n","import { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { Tooltip } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\n\nfunction AboutTitle() {\n  const dispatch = useDispatch();\n\n  const showModal = () => {\n    dispatch(websiteActions.toggleAboutModalVisible());\n  };\n\n  return (\n    <div className=\"aboutContainer\">\n      <Tooltip placement=\"right\" title={<FormattedMessage id=\"link.aboutMe\" />}>\n        <span className=\"aboutTitle\" onClick={showModal}>\n          <FormattedMessage id=\"about.title\" />\n        </span>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default AboutTitle;\n","import LazyLoad from \"react-lazyload\";\nimport React from \"react\";\nimport { Tooltip } from \"antd\";\n\nfunction Connections() {\n  return (\n    <div className=\"connectionsContainer\">\n      <Tooltip placement=\"right\" title=\"Linkedin\">\n        <LazyLoad>\n          <img\n            className=\"connectionIcon\"\n            src={require(\"../../../images/icons/linkedin.svg\")}\n            alt=\"Linkedin\"\n            onClick={() =>\n              window.open(\"https://www.linkedin.com/in/spaulas/?locale=en_US\")\n            }\n          />\n        </LazyLoad>\n      </Tooltip>\n\n      <Tooltip placement=\"right\" title=\"Github\">\n        <LazyLoad>\n          <img\n            className=\"connectionIcon\"\n            src={require(\"../../../images/icons/github.svg\")}\n            alt=\"Github\"\n            onClick={() => window.open(\"https://github.com/spaulas\")}\n          />\n        </LazyLoad>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default Connections;\n","import { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\n\ninterface DeveloperTitleProps {\n  className?: string;\n}\n\nfunction DeveloperTitle({ className = \"\" }: DeveloperTitleProps) {\n  return (\n    <div className={`developerTitleContainer ${className}`}>\n      <h1 className=\"developerName\">Paula Santos</h1>\n      <h3 className=\"developerJob\"><FormattedMessage id=\"developer.title\" /></h3>\n    </div>\n  );\n}\n\nexport default DeveloperTitle;\n","import { Select, Tooltip } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { RootReducerState } from \"../../../../global\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst { Option } = Select;\n\nfunction LanguageSwitch() {\n  const dispatch = useDispatch();\n\n  const { language } = useSelector(({ Website }: RootReducerState) => ({\n    language: Website.language\n  }));\n\n  const changeLanguage = (language: string) => {\n    dispatch(websiteActions.changeLanguage(language));\n  };\n\n  return (\n    <Tooltip title={<FormattedMessage id=\"configurations.languages\" />}>\n      <Select\n        defaultValue=\"en-US\"\n        className=\"languageSwitch\"\n        value={language}\n        onChange={changeLanguage}\n      >\n        <Option value=\"en-US\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"GB\" />\n        </Option>\n        <Option value=\"pt-BR\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"BR\" />\n        </Option>\n        <Option value=\"de-DE\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"DE\" />\n        </Option>\n        <Option value=\"es-ES\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"ES\" />\n        </Option>\n      </Select>\n    </Tooltip>\n  );\n}\n\nexport default LanguageSwitch;\n","import { FormattedMessage } from \"react-intl\";\nimport LazyLoad from \"react-lazyload\";\nimport React from \"react\";\nimport { Tooltip } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\n\nfunction LightMode() {\n  const dispatch = useDispatch();\n\n  const toggleTheme = () => {\n    dispatch(websiteActions.toggleLightMode());\n  };\n\n  return (\n    <Tooltip title={<FormattedMessage id=\"configurations.theme\" />}>\n      <LazyLoad>\n        <img\n          className=\"lightMode\"\n          src={require(\"../../../../images/icons/lightMode.svg\")}\n          alt=\"\"\n          onClick={toggleTheme}\n        />\n      </LazyLoad>\n    </Tooltip>\n  );\n}\n\nexport default LightMode;\n","import { FormattedMessage } from \"react-intl\";\nimport LazyLoad from \"react-lazyload\";\nimport React from \"react\";\n\nfunction ProjectsArrow() {\n  const goDown = () => {\n    const innerHeight = window.innerHeight;\n    window.scroll(0, innerHeight);\n  };\n\n  return (\n    <div className=\"projectsArrow\">\n      <span className=\"arrowTitle\">\n        <FormattedMessage id=\"project.arrow\" />\n      </span>\n      <LazyLoad>\n        <img\n          className=\"arrowIcon\"\n          src={require(\"../../../../images/icons/arrowDown.svg\")}\n          alt=\"\"\n          onClick={goDown}\n        />\n      </LazyLoad>\n    </div>\n  );\n}\n\nexport default ProjectsArrow;\n","import { Col, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport AboutModal from \"../../Components/AboutMeContainer/AboutModal/AboutModal.component\";\nimport AboutTitle from \"../../Components/AboutMeContainer/AboutTitle/AboutTitle.component\";\nimport Connections from \"../../Components/Links/Connections.component\";\nimport DeveloperTitle from \"../../Components/Titles/DeveloperTitle/DeveloperTitle.component\";\nimport LanguageSwitch from \"../../Components/Configurations/LanguageSwitch/LanguageSwitch.component\";\nimport LightMode from \"../../Components/Configurations/LightMode/LightMode.component\";\nimport ProjectsArrow from \"../../Components/Projects/ProjectsArrow/ProjectsArrow.component\";\nimport { RootReducerState } from \"../../../global\";\nimport { useSelector } from \"react-redux\";\n\nfunction HomePage() {\n  const { theme } = useSelector(({ Website }: RootReducerState) => ({\n    theme: Website.theme\n  }));\n\n  const [animation, setAnimation] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimation(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <div className={`homePage ${theme}`}>\n      <div className=\"overBackground\">\n        <Row className=\"topRow\" align=\"middle\">\n          <LanguageSwitch />\n          <LightMode />\n        </Row>\n        <Row className=\"middleRow\">\n          <Col span={1}>\n            <AboutTitle />\n          </Col>\n          <Col span={21}>\n            <Row style={{ height: \"100%\" }} justify=\"start\" align=\"middle\">\n              <h1 className={`initials ${animation ? \"showInitials\" : \"\"}`}>\n                PS\n              </h1>\n              <DeveloperTitle\n                className={animation ? \"showDeveloperName\" : \"\"}\n              />\n            </Row>\n          </Col>\n          <Col span={2}>\n            <Connections />\n          </Col>\n        </Row>\n        <Row className=\"bottomRow\" justify=\"center\">\n          <ProjectsArrow />\n        </Row>\n      </div>\n      <AboutModal />\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"sourceRoot":""}