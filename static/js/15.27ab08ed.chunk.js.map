{"version":3,"sources":["redux/website/website.actions.ts","react/Components/Configurations/LanguageSwitch/LanguageSwitch.component.tsx"],"names":["actionsCreators","Object","freeze","toggleLightMode","type","WebsiteActionTypes","TOGGLE_LIGHT_MODE","toggleAboutModalVisible","TOGGLE_ABOUT_MODAL_VISIBLE","setPageLoading","SET_PAGE_LOADING","removePageLoading","REMOVE_PAGE_LOADING","changeLanguage","language","CHANGE_LANGUAGE","Option","Select","LanguageSwitch","dispatch","useDispatch","useSelector","Website","title","id","defaultValue","className","value","onChange","websiteActions","countryCode"],"mappings":"6HACA,YAyBMA,EAAkBC,OAAOC,OAAO,CACpCC,gBAxBsB,iBAAO,CAC7BC,KAAMC,IAAmBC,oBAwBzBC,wBArB8B,iBAAO,CACrCH,KAAMC,IAAmBG,6BAqBzBC,eAlBqB,iBAAO,CAC5BL,KAAMC,IAAmBK,mBAkBzBC,kBAfwB,iBAAO,CAC/BP,KAAMC,IAAmBO,sBAezBC,eAZqB,SAACC,GAAD,MAAuB,CAC5CV,KAAMC,IAAmBU,gBACzBD,eAcad,O,iCCnCf,gFAQQgB,EAAWC,IAAXD,OAsCOE,UApCf,WACE,IAAMC,EAAWC,cAETN,EAAaO,aAAY,kBAAoC,CACnEP,SAD+B,EAAGQ,QAChBR,aADZA,SAQR,OACE,kBAAC,IAAD,CAASS,MAAO,kBAAC,IAAD,CAAkBC,GAAG,8BACnC,kBAAC,IAAD,CACEC,aAAa,QACbC,UAAU,iBACVC,MAAOb,EACPc,SAViB,SAACd,GACtBK,EAASU,IAAehB,eAAeC,MAWnC,kBAACE,EAAD,CAAQW,MAAM,SACZ,kBAAC,IAAD,CAAkBD,UAAU,QAAQI,YAAY,QAElD,kBAACd,EAAD,CAAQW,MAAM,SACZ,kBAAC,IAAD,CAAkBD,UAAU,QAAQI,YAAY,QAElD,kBAACd,EAAD,CAAQW,MAAM,SACZ,kBAAC,IAAD,CAAkBD,UAAU,QAAQI,YAAY,QAElD,kBAACd,EAAD,CAAQW,MAAM,SACZ,kBAAC,IAAD,CAAkBD,UAAU,QAAQI,YAAY","file":"static/js/15.27ab08ed.chunk.js","sourcesContent":["import { ValueOf } from \"../../global\";\nimport WebsiteActionTypes from \"./website.types\";\n\nconst toggleLightMode = () => ({\n  type: WebsiteActionTypes.TOGGLE_LIGHT_MODE\n});\n\nconst toggleAboutModalVisible = () => ({\n  type: WebsiteActionTypes.TOGGLE_ABOUT_MODAL_VISIBLE\n});\n\nconst setPageLoading = () => ({\n  type: WebsiteActionTypes.SET_PAGE_LOADING\n});\n\nconst removePageLoading = () => ({\n  type: WebsiteActionTypes.REMOVE_PAGE_LOADING\n});\n\nconst changeLanguage = (language: string) => ({\n  type: WebsiteActionTypes.CHANGE_LANGUAGE,\n  language\n});\n\n// ********************************************************\n\nconst actionsCreators = Object.freeze({\n  toggleLightMode,\n  toggleAboutModalVisible,\n  setPageLoading,\n  removePageLoading,\n  changeLanguage\n});\n\nexport type ActionsCreators = ReturnType<ValueOf<typeof actionsCreators>>;\nexport default actionsCreators;\n","import { Select, Tooltip } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { RootReducerState } from \"../../../../global\";\nimport websiteActions from \"../../../../redux/website/website.actions\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst { Option } = Select;\n\nfunction LanguageSwitch() {\n  const dispatch = useDispatch();\n\n  const { language } = useSelector(({ Website }: RootReducerState) => ({\n    language: Website.language\n  }));\n\n  const changeLanguage = (language: string) => {\n    dispatch(websiteActions.changeLanguage(language));\n  };\n\n  return (\n    <Tooltip title={<FormattedMessage id=\"configurations.languages\" />}>\n      <Select\n        defaultValue=\"en-US\"\n        className=\"languageSwitch\"\n        value={language}\n        onChange={changeLanguage}\n      >\n        <Option value=\"en-US\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"GB\" />\n        </Option>\n        <Option value=\"pt-BR\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"BR\" />\n        </Option>\n        <Option value=\"de-DE\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"DE\" />\n        </Option>\n        <Option value=\"es-ES\">\n          <ReactCountryFlag className=\"flags\" countryCode=\"ES\" />\n        </Option>\n      </Select>\n    </Tooltip>\n  );\n}\n\nexport default LanguageSwitch;\n"],"sourceRoot":""}